// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoterWalletMobile.Data;

namespace SoterWalletMobile.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190126092542_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("SoterWalletMobile.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<uint>("Account");

                    b.Property<uint>("AddressIndex");

                    b.Property<string>("AddressString");

                    b.Property<ulong>("Balance");

                    b.Property<uint>("Change");

                    b.Property<int>("CoinId");

                    b.Property<uint>("CoinType");

                    b.Property<uint>("Purpose");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("SoterWalletMobile.Models.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<uint>("AddressType");

                    b.Property<uint>("AddressTypeP2sh");

                    b.Property<uint>("AddressTypeP2wpkh");

                    b.Property<uint>("AddressTypeP2wsh");

                    b.Property<string>("Bech32Prefix");

                    b.Property<uint>("Bip44AccountPath");

                    b.Property<ulong>("BlockHeight");

                    b.Property<string>("CashaddrPrefix");

                    b.Property<string>("CoinName");

                    b.Property<string>("CoinShortcut");

                    b.Property<byte[]>("ContractAddress");

                    b.Property<string>("CurveName");

                    b.Property<uint>("Decimals");

                    b.Property<bool>("Decred");

                    b.Property<bool>("Enabled");

                    b.Property<bool>("ForceBip143");

                    b.Property<uint>("Forkid");

                    b.Property<byte[]>("GasLimit");

                    b.Property<DateTime>("LastNetworkUpdate");

                    b.Property<ulong>("MaxfeeKb");

                    b.Property<bool>("Segwit");

                    b.Property<string>("SignedMessageHeader");

                    b.Property<ulong>("TotalBalance");

                    b.Property<uint>("VersionGroupId");

                    b.Property<uint>("XprvMagic");

                    b.Property<uint>("XpubMagic");

                    b.Property<uint>("XpubMagicSegwitNative");

                    b.Property<uint>("XpubMagicSegwitP2sh");

                    b.HasKey("Id");

                    b.HasIndex("CoinName")
                        .IsUnique();

                    b.HasIndex("CoinShortcut")
                        .IsUnique();

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("SoterWalletMobile.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<long>("Amount");

                    b.Property<long>("BlockHeight");

                    b.Property<long>("Fee");

                    b.Property<string>("Hash");

                    b.Property<DateTime>("Received");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SoterWalletMobile.Models.Address", b =>
                {
                    b.HasOne("SoterWalletMobile.Models.Coin", "Coin")
                        .WithMany("Addresses")
                        .HasForeignKey("CoinId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoterWalletMobile.Models.Transaction", b =>
                {
                    b.HasOne("SoterWalletMobile.Models.Address", "Address")
                        .WithMany("Transactions")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
